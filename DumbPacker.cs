using System;
using System.IO;
using System.IO.Compression;
using System.Linq;

namespace DumbPacker
{
    public static class DumbPacker
    {
        /// <summary>
        /// Program messages.
        /// </summary>
        private const string _helpDialogue = 
            "USAGE: DumbPacker.exe -{p(ack), m(ask), b(ackup), h(elp)}, <ABSOLUTE_PATH_TO_PE32_EXECUTABLE_FILE>." +
            "\nAny number of executables can be supplied upon invocation for packing, so long as their absolute paths are specified. Non-PE32 files are ignored." +
            "\n\n FLAGS:" +
            "\n Pack: -p" +
            "\n\tCompresses program bytes of desired executable, then prepends decompression code to the resulting product." +
            "\n Mask: -m" +
            "\n\tFollowing the compression of the desired executable's bytes, applies bitwise masking of the compressed bytes to stymie unpacking attempts." +
            "\n Backup: -b" +
            "\n\tCreates a *.bak backup file of the desired executable.";

        /// <summary>
        /// Depacking stub.
        /// </summary>
        private static readonly int[] _depaBytes = { 0x4D, 0x5A, 0x90, 0, 0x3, 0, 0, 0, 0x4, 0, 0, 0, 0xFF, 0xFF, 0, 0, 0xB8, 0, 0, 0, 0, 0, 0, 0, 0x40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x80, 0, 0, 0, 0xE, 0x1F, 0xBA, 0xE, 0, 0xB4, 0x9, 0xCD, 0x21, 0xB8, 0x1, 0x4C, 0xCD, 0x21, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x61, 0x6D, 0x20, 0x63, 0x61, 0x6E, 0x6E, 0x6F, 0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6E, 0x20, 0x69, 0x6E, 0x20, 0x44, 0x4F, 0x53, 0x20, 0x6D, 0x6F, 0x64, 0x65, 0x2E, 0xD, 0xD, 0xA, 0x24, 0, 0, 0, 0, 0, 0, 0, 0x50, 0x45, 0, 0, 0x4C, 0x1, 0x3, 0, 0x49, 0xFD, 0xD, 0x59, 0, 0, 0, 0, 0, 0, 0, 0, 0xE0, 0, 0x2, 0x1, 0xB, 0x1, 0x30, 0, 0, 0x12, 0, 0, 0, 0x8, 0, 0, 0, 0, 0, 0, 0x8E, 0x30, 0, 0, 0, 0x20, 0, 0, 0, 0x40, 0, 0, 0, 0, 0x40, 0, 0, 0x20, 0, 0, 0, 0x2, 0, 0, 0x4, 0, 0, 0, 0, 0, 0, 0, 0x6, 0, 0, 0, 0, 0, 0, 0, 0, 0x80, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0x3, 0, 0x60, 0x85, 0, 0, 0x10, 0, 0, 0x10, 0, 0, 0, 0, 0x10, 0, 0, 0x10, 0, 0, 0, 0, 0, 0, 0x10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x3C, 0x30, 0, 0, 0x4F, 0, 0, 0, 0, 0x40, 0, 0, 0x8C, 0x5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x60, 0, 0, 0xC, 0, 0, 0, 0x4, 0x2F, 0, 0, 0x1C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x20, 0, 0, 0x8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x8, 0x20, 0, 0, 0x48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2E, 0x74, 0x65, 0x78, 0x74, 0, 0, 0, 0x94, 0x10, 0, 0, 0, 0x20, 0, 0, 0, 0x12, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x20, 0, 0, 0x60, 0x2E, 0x72, 0x73, 0x72, 0x63, 0, 0, 0, 0x8C, 0x5, 0, 0, 0, 0x40, 0, 0, 0, 0x6, 0, 0, 0, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x40, 0, 0, 0x40, 0x2E, 0x72, 0x65, 0x6C, 0x6F, 0x63, 0, 0, 0xC, 0, 0, 0, 0, 0x60, 0, 0, 0, 0x2, 0, 0, 0, 0x1A, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x40, 0, 0, 0x42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x70, 0x30, 0, 0, 0, 0, 0, 0, 0x48, 0, 0, 0, 0x2, 0, 0x5, 0, 0xAC, 0x22, 0, 0, 0x58, 0xC, 0, 0, 0x3, 0, 0, 0, 0x1, 0, 0, 0x6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x13, 0x30, 0x6, 0, 0x7A, 0, 0, 0, 0x1, 0, 0, 0x11, 0x7E, 0x2, 0, 0, 0x4, 0x6F, 0x12, 0, 0, 0xA, 0x28, 0x13, 0, 0, 0xA, 0xA, 0x6, 0x8E, 0x6A, 0x20, 0x28, 0x23, 0, 0, 0x6A, 0x59, 0xD4, 0x8D, 0x1C, 0, 0, 0x1, 0xB, 0x6, 0x20, 0, 0x23, 0, 0, 0x8F, 0x1C, 0, 0, 0x1, 0x16, 0x28, 0x14, 0, 0, 0xA, 0xC, 0x6, 0x20, 0x28, 0x23, 0, 0, 0x6A, 0x7, 0x16, 0x6A, 0x6, 0x8E, 0x6A, 0x20, 0x28, 0x23, 0, 0, 0x6A, 0x59, 0x28, 0x15, 0, 0, 0xA, 0x8, 0x2D, 0x10, 0x7, 0x17, 0x6, 0x20, 0, 0x23, 0, 0, 0x91, 0x28, 0x2, 0, 0, 0x6, 0x2B, 0x8, 0x7, 0x16, 0x16, 0x28, 0x2, 0, 0, 0x6, 0xD, 0x9, 0x72, 0x1, 0, 0, 0x70, 0x28, 0x16, 0, 0, 0xA, 0x28, 0x17, 0, 0, 0xA, 0x26, 0x2A, 0, 0, 0x1B, 0x30, 0x4, 0, 0xF8, 0, 0, 0, 0x2, 0, 0, 0x11, 0x1B, 0x28, 0x3, 0, 0, 0x6, 0xA, 0x3, 0x2D, 0x63, 0x2, 0x73, 0x18, 0, 0, 0xA, 0xB, 0x6, 0x72, 0x1, 0, 0, 0x70, 0x28, 0x16, 0, 0, 0xA, 0x28, 0x19, 0, 0, 0xA, 0xC, 0x7, 0x16, 0x73, 0x1A, 0, 0, 0xA, 0xD, 0x9, 0x8, 0x6F, 0x1B, 0, 0, 0xA, 0xDE, 0xA, 0x9, 0x2C, 0x6, 0x9, 0x6F, 0x1C, 0, 0, 0xA, 0xDC, 0xDE, 0xA, 0x8, 0x2C, 0x6, 0x8, 0x6F, 0x1C, 0, 0, 0xA, 0xDC, 0xDE, 0xA, 0x7, 0x2C, 0x6, 0x7, 0x6F, 0x1C, 0, 0, 0xA, 0xDC, 0xDD, 0x9C, 0, 0, 0, 0x13, 0x4, 0x11, 0x4, 0x6F, 0x1D, 0, 0, 0xA, 0x28, 0x1E, 0, 0, 0xA, 0xDD, 0x89, 0, 0, 0, 0x6, 0x72, 0x1, 0, 0, 0x70, 0x28, 0x16, 0, 0, 0xA, 0x28, 0x19, 0, 0, 0xA, 0x13, 0x5, 0x2, 0x73, 0x18, 0, 0, 0xA, 0x13, 0x6, 0x11, 0x6, 0x6F, 0x1F, 0, 0, 0xA, 0x13, 0x7, 0x16, 0x13, 0x8, 0x2B, 0x17, 0x11, 0x7, 0x11, 0x8, 0x11, 0x7, 0x11, 0x8, 0x91, 0x4, 0x61, 0x28, 0x20, 0, 0, 0xA, 0x9C, 0x11, 0x8, 0x17, 0x58, 0x13, 0x8, 0x11, 0x8, 0x6A, 0x11, 0x6, 0x6F, 0x21, 0, 0, 0xA, 0x32, 0xDD, 0x11, 0x7, 0x73, 0x18, 0, 0, 0xA, 0x16, 0x73, 0x1A, 0, 0, 0xA, 0x13, 0x9, 0x11, 0x9, 0x11, 0x5, 0x6F, 0x1B, 0, 0, 0xA, 0xDE, 0x24, 0x11, 0x9, 0x2C, 0x7, 0x11, 0x9, 0x6F, 0x1C, 0, 0, 0xA, 0xDC, 0x11, 0x6, 0x2C, 0x7, 0x11, 0x6, 0x6F, 0x1C, 0, 0, 0xA, 0xDC, 0x11, 0x5, 0x2C, 0x7, 0x11, 0x5, 0x6F, 0x1C, 0, 0, 0xA, 0xDC, 0x6, 0x2A, 0x1, 0x58, 0, 0, 0x2, 0, 0x2A, 0, 0x9, 0x33, 0, 0xA, 0, 0, 0, 0, 0x2, 0, 0x22, 0, 0x1D, 0x3F, 0, 0xA, 0, 0, 0, 0, 0x2, 0, 0x11, 0, 0x3A, 0x4B, 0, 0xA, 0, 0, 0, 0, 0, 0, 0xA, 0, 0x50, 0x5A, 0, 0x13, 0x18, 0, 0, 0x1, 0x2, 0, 0xC7, 0, 0xB, 0xD2, 0, 0xC, 0, 0, 0, 0, 0x2, 0, 0x87, 0, 0x57, 0xDE, 0, 0xC, 0, 0, 0, 0, 0x2, 0, 0x7F, 0, 0x6B, 0xEA, 0, 0xC, 0, 0, 0, 0, 0x13, 0x30, 0x3, 0, 0x38, 0, 0, 0, 0x3, 0, 0, 0x11, 0x73, 0x5, 0, 0, 0x6, 0xA, 0x6, 0x73, 0x22, 0, 0, 0xA, 0x7D, 0x3, 0, 0, 0x4, 0x72, 0xB, 0, 0, 0x70, 0x2, 0x28, 0x1, 0, 0, 0x2B, 0x6, 0xFE, 0x6, 0x6, 0, 0, 0x6, 0x73, 0x24, 0, 0, 0xA, 0x28, 0x2, 0, 0, 0x2B, 0x28, 0x3, 0, 0, 0x2B, 0x73, 0x27, 0, 0, 0xA, 0x2A, 0x42, 0x28, 0x28, 0, 0, 0xA, 0x6F, 0x29, 0, 0, 0xA, 0x80, 0x2, 0, 0, 0x4, 0x2A, 0x1E, 0x2, 0x28, 0x2A, 0, 0, 0xA, 0x2A, 0x62, 0x3, 0x2, 0x7B, 0x3, 0, 0, 0x4, 0x3, 0x6F, 0x2B, 0, 0, 0xA, 0x6F, 0x2C, 0, 0, 0xA, 0x6F, 0x2D, 0, 0, 0xA, 0x2A, 0, 0, 0x42, 0x53, 0x4A, 0x42, 0x1, 0, 0x1, 0, 0, 0, 0, 0, 0xC, 0, 0, 0, 0x76, 0x34, 0x2E, 0x30, 0x2E, 0x33, 0x30, 0x33, 0x31, 0x39, 0, 0, 0, 0, 0x5, 0, 0x6C, 0, 0, 0, 0xF4, 0x3, 0, 0, 0x23, 0x7E, 0, 0, 0x60, 0x4, 0, 0, 0xCC, 0x4, 0, 0, 0x23, 0x53, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x73, 0, 0, 0, 0, 0x2C, 0x9, 0, 0, 0x58, 0, 0, 0, 0x23, 0x55, 0x53, 0, 0x84, 0x9, 0, 0, 0x10, 0, 0, 0, 0x23, 0x47, 0x55, 0x49, 0x44, 0, 0, 0, 0x94, 0x9, 0, 0, 0xC4, 0x2, 0, 0, 0x23, 0x42, 0x6C, 0x6F, 0x62, 0, 0, 0, 0, 0, 0, 0, 0x2, 0, 0, 0x1, 0x57, 0x5D, 0x2, 0x8, 0x9, 0xA, 0, 0, 0, 0xFA, 0x1, 0x33, 0, 0x16, 0, 0, 0x1, 0, 0, 0, 0x27, 0, 0, 0, 0x3, 0, 0, 0, 0x3, 0, 0, 0, 0x6, 0, 0, 0, 0x5, 0, 0, 0, 0x2D, 0, 0, 0, 0x4, 0, 0, 0, 0x10, 0, 0, 0, 0x1, 0, 0, 0, 0x4, 0, 0, 0, 0x1, 0, 0, 0, 0x1, 0, 0, 0, 0x3, 0, 0, 0, 0x1, 0, 0, 0, 0x3, 0, 0, 0, 0, 0, 0xD9, 0x2, 0x1, 0, 0, 0, 0, 0, 0x6, 0, 0x47, 0x2, 0xF8, 0x3, 0x6, 0, 0xB4, 0x2, 0xF8, 0x3, 0x6, 0, 0x5F, 0x1, 0xC6, 0x3, 0xF, 0, 0x18, 0x4, 0, 0, 0x6, 0, 0x87, 0x1, 0x86, 0x3, 0x6, 0, 0x2A, 0x2, 0x86, 0x3, 0x6, 0, 0xB, 0x2, 0x86, 0x3, 0x6, 0, 0x9B, 0x2, 0x86, 0x3, 0x6, 0, 0x67, 0x2, 0x86, 0x3, 0x6, 0, 0x80, 0x2, 0x86, 0x3, 0x6, 0, 0x9E, 0x1, 0x86, 0x3, 0x6, 0, 0x73, 0x1, 0xD9, 0x3, 0x6, 0, 0x37, 0x1, 0xD9, 0x3, 0x6, 0, 0xD2, 0x1, 0x86, 0x3, 0x6, 0, 0xB9, 0x1, 0xE6, 0x2, 0x6, 0, 0x77, 0x3, 0x3B, 0x4, 0x6, 0, 0xEF, 0x1, 0x3B, 0x4, 0x6, 0, 0x45, 0x1, 0xBA, 0x4, 0x6, 0, 0x8C, 0x4, 0x4A, 0x3, 0xA, 0, 0xDC, 0, 0xC6, 0x3, 0x6, 0, 0x3D, 0x3, 0x5A, 0, 0x6, 0, 0x24, 0x3, 0x5A, 0, 0xA, 0, 0x2F, 0x3, 0x61, 0x3, 0x6, 0, 0x98, 0x3, 0x4A, 0x3, 0x6, 0, 0x1C, 0x1, 0xF8, 0x3, 0x6, 0, 0x51, 0x3, 0x4A, 0x3, 0x6, 0, 0xC0, 0, 0x5A, 0, 0x6, 0, 0xD4, 0x2, 0x4A, 0x3, 0x6, 0, 0xAF, 0x4, 0x4A, 0x3, 0x6, 0, 0x6, 0x3, 0x4A, 0x3, 0xA, 0, 0x6B, 0x4, 0xC6, 0x3, 0x6, 0, 0x43, 0x3, 0x5A, 0, 0xA, 0, 0x8D, 0, 0x61, 0x3, 0x6, 0, 0xB4, 0, 0x4A, 0x3, 0x6, 0, 0xC5, 0, 0x4A, 0x3, 0x6, 0, 0xA0, 0x4, 0x4A, 0x3, 0xE, 0, 0xA9, 0, 0xA9, 0x3, 0x6, 0, 0x29, 0, 0x72, 0, 0x6, 0, 0x37, 0, 0x4A, 0x3, 0, 0, 0, 0, 0x3E, 0, 0, 0, 0, 0, 0x1, 0, 0x1, 0, 0x81, 0x1, 0x10, 0, 0x64, 0, 0x64, 0, 0x4D, 0, 0x1, 0, 0x1, 0, 0x3, 0x1, 0x10, 0, 0x1, 0, 0, 0, 0x4D, 0, 0x3, 0, 0x5, 0, 0x51, 0x80, 0x47, 0, 0xC4, 0x1, 0x31, 0, 0x51, 0, 0xC7, 0x1, 0x6, 0, 0x58, 0x3, 0xCB, 0x1, 0x50, 0x20, 0, 0, 0, 0, 0x91, 0, 0x5C, 0x3, 0xCF, 0x1, 0x1, 0, 0xD8, 0x20, 0, 0, 0, 0, 0x91, 0, 0x73, 0x4, 0xD3, 0x1, 0x1, 0, 0x34, 0x22, 0, 0, 0, 0, 0x91, 0, 0, 0x3, 0xDB, 0x1, 0x4, 0, 0x78, 0x22, 0, 0, 0, 0, 0x91, 0x18, 0xBB, 0x3, 0xCF, 0x1, 0x5, 0, 0x89, 0x22, 0, 0, 0, 0, 0x86, 0x18, 0xB5, 0x3, 0x6, 0, 0x5, 0, 0x91, 0x22, 0, 0, 0, 0, 0x83, 0, 0x16, 0, 0xE0, 0x1, 0x5, 0, 0, 0, 0x1, 0, 0xE2, 0x2, 0x10, 0x10, 0x2, 0, 0x1F, 0x3, 0x10, 0x10, 0x3, 0, 0xC2, 0x3, 0x10, 0x10, 0x1, 0, 0x18, 0x3, 0, 0, 0x1, 0, 0x7C, 0x4, 0x9, 0, 0xB5, 0x3, 0x1, 0, 0x11, 0, 0xB5, 0x3, 0x6, 0, 0x19, 0, 0xB5, 0x3, 0xA, 0, 0x29, 0, 0xB5, 0x3, 0x10, 0, 0x31, 0, 0xB5, 0x3, 0x10, 0, 0x39, 0, 0xB5, 0x3, 0x10, 0, 0x41, 0, 0xB5, 0x3, 0x10, 0, 0x49, 0, 0xB5, 0x3, 0x10, 0, 0x51, 0, 0xB5, 0x3, 0x10, 0, 0x59, 0, 0xB5, 0x3, 0x10, 0, 0x61, 0, 0xB5, 0x3, 0x15, 0, 0x69, 0, 0xB5, 0x3, 0x10, 0, 0x71, 0, 0xB5, 0x3, 0x10, 0, 0x79, 0, 0xB5, 0x3, 0x10, 0, 0x89, 0, 0xB5, 0x3, 0x1A, 0, 0x91, 0, 0xB5, 0x3, 0x6, 0, 0xC9, 0, 0xB5, 0x3, 0x6, 0, 0xA1, 0, 0xEA, 0, 0x29, 0, 0xD9, 0, 0x27, 0x4, 0x2D, 0, 0xE1, 0, 0x34, 0x4, 0x33, 0, 0xE9, 0, 0xB5, 0x4, 0x38, 0, 0xF1, 0, 0x7E, 0x4, 0x43, 0, 0xF9, 0, 0x9A, 0x4, 0x49, 0, 0xA9, 0, 0xB5, 0x3, 0x64, 0, 0xD9, 0, 0x15, 0x1, 0x6A, 0, 0xB9, 0, 0xB5, 0x3, 0x70, 0, 0x1, 0x1, 0xA2, 0x3, 0x7A, 0, 0x11, 0x1, 0xD, 0x1, 0x6, 0, 0xC1, 0, 0x9D, 0, 0x29, 0, 0x19, 0x1, 0xF7, 0, 0x81, 0, 0xA9, 0, 0xAD, 0x4, 0x86, 0, 0x21, 0x1, 0xD2, 0x2, 0x8B, 0, 0x1, 0x1, 0xD, 0x3, 0x90, 0, 0xD1, 0, 0xB5, 0x3, 0x6, 0, 0x29, 0x1, 0x85, 0x4, 0x99, 0, 0xC, 0, 0xB5, 0x3, 0xB3, 0, 0x29, 0x1, 0x93, 0x4, 0xB9, 0, 0x29, 0x1, 0xAD, 0x4, 0xD9, 0, 0xF1, 0, 0xB5, 0x3, 0xEB, 0, 0xF9, 0, 0x61, 0x4, 0xF4, 0, 0xF9, 0, 0xCD, 0, 0xF9, 0, 0x99, 0, 0xB5, 0x3, 0x6, 0, 0xF1, 0, 0xD, 0x3, 0xFE, 0, 0xD1, 0, 0xA8, 0x4, 0x2, 0x1, 0xF1, 0, 0x57, 0x4, 0x7, 0x1, 0x6, 0, 0x4, 0, 0x15, 0x1, 0x2, 0, 0x9, 0, 0x18, 0x1, 0x8, 0, 0xD, 0, 0x1A, 0x1, 0x8, 0, 0x11, 0, 0x1F, 0x1, 0x27, 0, 0x83, 0, 0xBF, 0x2, 0x2E, 0, 0xB, 0, 0xE5, 0x1, 0x2E, 0, 0x13, 0, 0xEE, 0x1, 0x2E, 0, 0x1B, 0, 0xD, 0x2, 0x2E, 0, 0x23, 0, 0x16, 0x2, 0x2E, 0, 0x2B, 0, 0x20, 0x2, 0x2E, 0, 0x33, 0, 0x20, 0x2, 0x2E, 0, 0x3B, 0, 0x20, 0x2, 0x2E, 0, 0x43, 0, 0x16, 0x2, 0x2E, 0, 0x4B, 0, 0x26, 0x2, 0x2E, 0, 0x53, 0, 0x20, 0x2, 0x2E, 0, 0x5B, 0, 0x20, 0x2, 0x2E, 0, 0x63, 0, 0x3E, 0x2, 0x2E, 0, 0x6B, 0, 0x68, 0x2, 0x2E, 0, 0x73, 0, 0x75, 0x2, 0x63, 0, 0x8B, 0, 0xBF, 0x2, 0x8, 0, 0x6, 0, 0x24, 0x1, 0x20, 0, 0x4F, 0, 0x94, 0, 0xF1, 0, 0xAB, 0, 0x4, 0x80, 0, 0, 0x1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x64, 0, 0, 0, 0x4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xC, 0x1, 0x69, 0, 0, 0, 0, 0, 0x4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xC, 0x1, 0x4A, 0x3, 0, 0, 0, 0, 0x4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xC, 0x1, 0x1, 0x1, 0, 0, 0, 0, 0x3, 0, 0x2, 0, 0x47, 0, 0xA7, 0, 0x4B, 0, 0xD4, 0, 0x4D, 0, 0xE7, 0, 0, 0, 0, 0x3C, 0x3E, 0x63, 0x5F, 0x5F, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x43, 0x6C, 0x61, 0x73, 0x73, 0x34, 0x5F, 0x30, 0, 0x3C, 0x52, 0x61, 0x6E, 0x64, 0x6F, 0x6D, 0x53, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x62, 0x5F, 0x5F, 0x30, 0, 0x49, 0x45, 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x62, 0x6C, 0x65, 0x60, 0x31, 0, 0x46, 0x75, 0x6E, 0x63, 0x60, 0x32, 0, 0x3C, 0x4D, 0x6F, 0x64, 0x75, 0x6C, 0x65, 0x3E, 0, 0x44, 0x45, 0x50, 0x41, 0x5F, 0x53, 0x49, 0x5A, 0x45, 0, 0x50, 0x52, 0x4F, 0x43, 0x5F, 0x52, 0x45, 0x46, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x49, 0x4F, 0, 0x44, 0x65, 0x70, 0x61, 0, 0x6D, 0x73, 0x63, 0x6F, 0x72, 0x6C, 0x69, 0x62, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x43, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x73, 0x2E, 0x47, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0, 0x43, 0x6F, 0x6D, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6F, 0x6E, 0x4D, 0x6F, 0x64, 0x65, 0, 0x67, 0x65, 0x74, 0x5F, 0x4D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0, 0x45, 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x62, 0x6C, 0x65, 0, 0x49, 0x44, 0x69, 0x73, 0x70, 0x6F, 0x73, 0x61, 0x62, 0x6C, 0x65, 0, 0x46, 0x69, 0x6C, 0x65, 0, 0x43, 0x6F, 0x6E, 0x73, 0x6F, 0x6C, 0x65, 0, 0x67, 0x65, 0x74, 0x5F, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x6F, 0x64, 0x75, 0x6C, 0x65, 0, 0x50, 0x72, 0x6F, 0x63, 0x65, 0x73, 0x73, 0x4D, 0x6F, 0x64, 0x75, 0x6C, 0x65, 0, 0x67, 0x65, 0x74, 0x5F, 0x46, 0x69, 0x6C, 0x65, 0x4E, 0x61, 0x6D, 0x65, 0, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4C, 0x69, 0x6E, 0x65, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x43, 0x6F, 0x72, 0x65, 0, 0x44, 0x69, 0x73, 0x70, 0x6F, 0x73, 0x65, 0, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0, 0x43, 0x6F, 0x6D, 0x70, 0x69, 0x6C, 0x65, 0x72, 0x47, 0x65, 0x6E, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x47, 0x75, 0x69, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x55, 0x6E, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6C, 0x65, 0x43, 0x6F, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x61, 0x62, 0x6C, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x43, 0x6F, 0x6D, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6C, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x41, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x54, 0x69, 0x74, 0x6C, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x41, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x54, 0x72, 0x61, 0x64, 0x65, 0x6D, 0x61, 0x72, 0x6B, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6D, 0x65, 0x77, 0x6F, 0x72, 0x6B, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x41, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x46, 0x69, 0x6C, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x6D, 0x69, 0x73, 0x73, 0x69, 0x6F, 0x6E, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x41, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x43, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x41, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x43, 0x6F, 0x6D, 0x70, 0x69, 0x6C, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x52, 0x65, 0x6C, 0x61, 0x78, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x41, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x50, 0x72, 0x6F, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x41, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x43, 0x6F, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x41, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x6E, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x52, 0x75, 0x6E, 0x74, 0x69, 0x6D, 0x65, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6C, 0x69, 0x74, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0, 0x54, 0x6F, 0x42, 0x79, 0x74, 0x65, 0, 0x44, 0x65, 0x70, 0x61, 0x2E, 0x65, 0x78, 0x65, 0, 0x62, 0x75, 0x66, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x52, 0x75, 0x6E, 0x74, 0x69, 0x6D, 0x65, 0x2E, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x69, 0x6E, 0x67, 0, 0x52, 0x61, 0x6E, 0x64, 0x6F, 0x6D, 0x53, 0x74, 0x72, 0x69, 0x6E, 0x67, 0, 0x67, 0x65, 0x74, 0x5F, 0x4C, 0x65, 0x6E, 0x67, 0x74, 0x68, 0, 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68, 0, 0x6D, 0x61, 0x73, 0x6B, 0, 0x46, 0x69, 0x6C, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6D, 0, 0x44, 0x65, 0x66, 0x6C, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6D, 0, 0x4D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6D, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0, 0x52, 0x61, 0x6E, 0x64, 0x6F, 0x6D, 0, 0x72, 0x61, 0x6E, 0, 0x4D, 0x61, 0x69, 0x6E, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x49, 0x4F, 0x2E, 0x43, 0x6F, 0x6D, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6F, 0x6E, 0, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x52, 0x65, 0x66, 0x6C, 0x65, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0, 0x43, 0x6F, 0x70, 0x79, 0x54, 0x6F, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x4C, 0x69, 0x6E, 0x71, 0, 0x2E, 0x63, 0x74, 0x6F, 0x72, 0, 0x2E, 0x63, 0x63, 0x74, 0x6F, 0x72, 0, 0x78, 0x6F, 0x72, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x44, 0x69, 0x61, 0x67, 0x6E, 0x6F, 0x73, 0x74, 0x69, 0x63, 0x73, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x52, 0x75, 0x6E, 0x74, 0x69, 0x6D, 0x65, 0x2E, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x6F, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x52, 0x75, 0x6E, 0x74, 0x69, 0x6D, 0x65, 0x2E, 0x43, 0x6F, 0x6D, 0x70, 0x69, 0x6C, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x69, 0x6E, 0x67, 0x4D, 0x6F, 0x64, 0x65, 0x73, 0, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6C, 0x6C, 0x42, 0x79, 0x74, 0x65, 0x73, 0, 0x45, 0x71, 0x75, 0x61, 0x6C, 0x73, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2E, 0x50, 0x65, 0x72, 0x6D, 0x69, 0x73, 0x73, 0x69, 0x6F, 0x6E, 0x73, 0, 0x67, 0x65, 0x74, 0x5F, 0x43, 0x68, 0x61, 0x72, 0x73, 0, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6E, 0x74, 0x50, 0x72, 0x6F, 0x63, 0x65, 0x73, 0x73, 0, 0x44, 0x65, 0x63, 0x6F, 0x6D, 0x70, 0x72, 0x65, 0x73, 0x73, 0, 0x43, 0x6F, 0x6E, 0x63, 0x61, 0x74, 0, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0, 0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74, 0, 0x53, 0x65, 0x6C, 0x65, 0x63, 0x74, 0, 0x53, 0x74, 0x61, 0x72, 0x74, 0, 0x43, 0x6F, 0x6E, 0x76, 0x65, 0x72, 0x74, 0, 0x4E, 0x65, 0x78, 0x74, 0, 0x54, 0x6F, 0x41, 0x72, 0x72, 0x61, 0x79, 0, 0x43, 0x6F, 0x70, 0x79, 0, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0, 0, 0, 0, 0x9, 0x2E, 0, 0x65, 0, 0x78, 0, 0x65, 0, 0, 0x49, 0x41, 0, 0x42, 0, 0x43, 0, 0x44, 0, 0x45, 0, 0x46, 0, 0x47, 0, 0x48, 0, 0x49, 0, 0x4A, 0, 0x4B, 0, 0x4C, 0, 0x4D, 0, 0x4E, 0, 0x4F, 0, 0x50, 0, 0x51, 0, 0x52, 0, 0x53, 0, 0x54, 0, 0x55, 0, 0x56, 0, 0x57, 0, 0x58, 0, 0x59, 0, 0x5A, 0, 0x30, 0, 0x31, 0, 0x32, 0, 0x33, 0, 0x34, 0, 0x35, 0, 0x36, 0, 0x37, 0, 0x38, 0, 0x39, 0, 0, 0, 0, 0, 0xE1, 0x15, 0x97, 0x99, 0x4E, 0xBF, 0x3E, 0x43, 0x87, 0xFC, 0xE8, 0x16, 0x97, 0xA0, 0x57, 0x4C, 0, 0x4, 0x20, 0x1, 0x1, 0x8, 0x3, 0x20, 0, 0x1, 0x5, 0x20, 0x1, 0x1, 0x11, 0x11, 0x4, 0x20, 0x1, 0x1, 0xE, 0x4, 0x20, 0x1, 0x1, 0x2, 0x5, 0x20, 0x1, 0x1, 0x11, 0x41, 0x8, 0x7, 0x4, 0x1D, 0x5, 0x1D, 0x5, 0x2, 0xE, 0x3, 0x20, 0, 0xE, 0x5, 0, 0x1, 0x1D, 0x5, 0xE, 0x4, 0x20, 0x1, 0x2, 0x5, 0xA, 0, 0x5, 0x1, 0x12, 0x75, 0xA, 0x12, 0x75, 0xA, 0xA, 0x5, 0, 0x2, 0xE, 0xE, 0xE, 0x5, 0, 0x1, 0x12, 0x7D, 0xE, 0x14, 0x7, 0xA, 0xE, 0x12, 0x55, 0x12, 0x59, 0x12, 0x5D, 0x12, 0x61, 0x12, 0x59, 0x12, 0x55, 0x1D, 0x5, 0x8, 0x12, 0x5D, 0x5, 0x20, 0x1, 0x1, 0x1D, 0x5, 0x5, 0, 0x1, 0x12, 0x59, 0xE, 0x9, 0x20, 0x2, 0x1, 0x12, 0x80, 0x81, 0x11, 0x80, 0x85, 0x6, 0x20, 0x1, 0x1, 0x12, 0x80, 0x81, 0x4, 0, 0x1, 0x1, 0xE, 0x4, 0x20, 0, 0x1D, 0x5, 0x4, 0, 0x1, 0x5, 0x8, 0x3, 0x20, 0, 0xA, 0x4, 0x7, 0x1, 0x12, 0xC, 0xD, 0x10, 0x1, 0x2, 0x15, 0x12, 0x80, 0x99, 0x1, 0x1E, 0, 0x1E, 0, 0x8, 0x3, 0xA, 0x1, 0xE, 0x7, 0x15, 0x12, 0x80, 0x9D, 0x2, 0xE, 0x3, 0x5, 0x20, 0x2, 0x1, 0x1C, 0x18, 0x1A, 0x10, 0x2, 0x2, 0x15, 0x12, 0x80, 0x99, 0x1, 0x1E, 0x1, 0x15, 0x12, 0x80, 0x99, 0x1, 0x1E, 0, 0x15, 0x12, 0x80, 0x9D, 0x2, 0x1E, 0, 0x1E, 0x1, 0x4, 0xA, 0x2, 0xE, 0x3, 0xD, 0x10, 0x1, 0x1, 0x1D, 0x1E, 0, 0x15, 0x12, 0x80, 0x99, 0x1, 0x1E, 0, 0x3, 0xA, 0x1, 0x3, 0x5, 0x20, 0x1, 0x1, 0x1D, 0x3, 0x2, 0x6, 0xE, 0x4, 0, 0, 0x12, 0x7D, 0x4, 0x20, 0, 0x12, 0x51, 0x3, 0x20, 0, 0x8, 0x4, 0x20, 0x1, 0x8, 0x8, 0x4, 0x20, 0x1, 0x3, 0x8, 0x8, 0xB7, 0x7A, 0x5C, 0x56, 0x19, 0x34, 0xE0, 0x89, 0x2, 0x28, 0x23, 0x1, 0, 0x4, 0, 0, 0, 0, 0x4, 0x5, 0, 0, 0, 0x80, 0x9E, 0x2E, 0x1, 0x80, 0x84, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2E, 0x50, 0x65, 0x72, 0x6D, 0x69, 0x73, 0x73, 0x69, 0x6F, 0x6E, 0x73, 0x2E, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x6D, 0x69, 0x73, 0x73, 0x69, 0x6F, 0x6E, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2C, 0x20, 0x6D, 0x73, 0x63, 0x6F, 0x72, 0x6C, 0x69, 0x62, 0x2C, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x34, 0x2E, 0x30, 0x2E, 0x30, 0x2E, 0x30, 0x2C, 0x20, 0x43, 0x75, 0x6C, 0x74, 0x75, 0x72, 0x65, 0x3D, 0x6E, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6C, 0x2C, 0x20, 0x50, 0x75, 0x62, 0x6C, 0x69, 0x63, 0x4B, 0x65, 0x79, 0x54, 0x6F, 0x6B, 0x65, 0x6E, 0x3D, 0x62, 0x37, 0x37, 0x61, 0x35, 0x63, 0x35, 0x36, 0x31, 0x39, 0x33, 0x34, 0x65, 0x30, 0x38, 0x39, 0x15, 0x1, 0x54, 0x2, 0x10, 0x53, 0x6B, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x1, 0x2, 0x6, 0x6, 0x3, 0x6, 0x12, 0x51, 0x3, 0x6, 0x12, 0x69, 0x3, 0, 0, 0x1, 0x7, 0, 0x3, 0xE, 0x1D, 0x5, 0x2, 0x8, 0x4, 0, 0x1, 0xE, 0x8, 0x4, 0x20, 0x1, 0x3, 0xE, 0x8, 0x1, 0, 0x8, 0, 0, 0, 0, 0, 0x1E, 0x1, 0, 0x1, 0, 0x54, 0x2, 0x16, 0x57, 0x72, 0x61, 0x70, 0x4E, 0x6F, 0x6E, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x54, 0x68, 0x72, 0x6F, 0x77, 0x73, 0x1, 0x8, 0x1, 0, 0x2, 0, 0, 0, 0, 0, 0x9, 0x1, 0, 0x4, 0x44, 0x65, 0x70, 0x61, 0, 0, 0x5, 0x1, 0, 0, 0, 0, 0x17, 0x1, 0, 0x12, 0x43, 0x6F, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20, 0xC2, 0xA9, 0x20, 0x20, 0x32, 0x30, 0x31, 0x36, 0, 0, 0x29, 0x1, 0, 0x24, 0x38, 0x35, 0x63, 0x35, 0x30, 0x39, 0x61, 0x33, 0x2D, 0x31, 0x63, 0x65, 0x35, 0x2D, 0x34, 0x31, 0x38, 0x31, 0x2D, 0x62, 0x39, 0x35, 0x30, 0x2D, 0x39, 0x34, 0x36, 0x61, 0x31, 0x38, 0x39, 0x34, 0x37, 0x35, 0x39, 0x39, 0, 0, 0xC, 0x1, 0, 0x7, 0x31, 0x2E, 0x30, 0x2E, 0x30, 0x2E, 0x30, 0, 0, 0x49, 0x1, 0, 0x1A, 0x2E, 0x4E, 0x45, 0x54, 0x46, 0x72, 0x61, 0x6D, 0x65, 0x77, 0x6F, 0x72, 0x6B, 0x2C, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x76, 0x34, 0x2E, 0x35, 0x1, 0, 0x54, 0xE, 0x14, 0x46, 0x72, 0x61, 0x6D, 0x65, 0x77, 0x6F, 0x72, 0x6B, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x4E, 0x61, 0x6D, 0x65, 0x12, 0x2E, 0x4E, 0x45, 0x54, 0x20, 0x46, 0x72, 0x61, 0x6D, 0x65, 0x77, 0x6F, 0x72, 0x6B, 0x20, 0x34, 0x2E, 0x35, 0x4, 0x1, 0, 0, 0, 0, 0, 0, 0, 0x49, 0xFD, 0xD, 0x59, 0, 0, 0, 0, 0x2, 0, 0, 0, 0x1C, 0x1, 0, 0, 0x20, 0x2F, 0, 0, 0x20, 0x11, 0, 0, 0x52, 0x53, 0x44, 0x53, 0xE7, 0x95, 0xFF, 0x99, 0xE5, 0x5E, 0x99, 0x47, 0x9E, 0x26, 0x4B, 0xAC, 0xEC, 0x10, 0x4B, 0xB6, 0x1, 0, 0, 0, 0x43, 0x3A, 0x5C, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5C, 0x61, 0x74, 0x74, 0x6F, 0x5C, 0x44, 0x65, 0x73, 0x6B, 0x74, 0x6F, 0x70, 0x5C, 0x44, 0x75, 0x6D, 0x62, 0x20, 0x50, 0x61, 0x63, 0x6B, 0x65, 0x72, 0x5C, 0x44, 0x65, 0x70, 0x61, 0x5C, 0x44, 0x65, 0x70, 0x61, 0x5C, 0x6F, 0x62, 0x6A, 0x5C, 0x78, 0x38, 0x36, 0x5C, 0x44, 0x65, 0x62, 0x75, 0x67, 0x5C, 0x44, 0x65, 0x70, 0x61, 0x2E, 0x70, 0x64, 0x62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x64, 0x30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x7E, 0x30, 0, 0, 0, 0x20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x70, 0x30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x5F, 0x43, 0x6F, 0x72, 0x45, 0x78, 0x65, 0x4D, 0x61, 0x69, 0x6E, 0, 0x6D, 0x73, 0x63, 0x6F, 0x72, 0x65, 0x65, 0x2E, 0x64, 0x6C, 0x6C, 0, 0, 0, 0, 0, 0xFF, 0x25, 0, 0x20, 0x40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2, 0, 0x10, 0, 0, 0, 0x20, 0, 0, 0x80, 0x18, 0, 0, 0, 0x50, 0, 0, 0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x1, 0, 0x1, 0, 0, 0, 0x38, 0, 0, 0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x1, 0, 0, 0, 0, 0, 0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x1, 0, 0x1, 0, 0, 0, 0x68, 0, 0, 0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x1, 0, 0, 0, 0, 0, 0x8C, 0x3, 0, 0, 0x90, 0x40, 0, 0, 0xFC, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xFC, 0x2, 0x34, 0, 0, 0, 0x56, 0, 0x53, 0, 0x5F, 0, 0x56, 0, 0x45, 0, 0x52, 0, 0x53, 0, 0x49, 0, 0x4F, 0, 0x4E, 0, 0x5F, 0, 0x49, 0, 0x4E, 0, 0x46, 0, 0x4F, 0, 0, 0, 0, 0, 0xBD, 0x4, 0xEF, 0xFE, 0, 0, 0x1, 0, 0, 0, 0x1, 0, 0, 0, 0, 0, 0, 0, 0x1, 0, 0, 0, 0, 0, 0x3F, 0, 0, 0, 0, 0, 0, 0, 0x4, 0, 0, 0, 0x1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x44, 0, 0, 0, 0x1, 0, 0x56, 0, 0x61, 0, 0x72, 0, 0x46, 0, 0x69, 0, 0x6C, 0, 0x65, 0, 0x49, 0, 0x6E, 0, 0x66, 0, 0x6F, 0, 0, 0, 0, 0, 0x24, 0, 0x4, 0, 0, 0, 0x54, 0, 0x72, 0, 0x61, 0, 0x6E, 0, 0x73, 0, 0x6C, 0, 0x61, 0, 0x74, 0, 0x69, 0, 0x6F, 0, 0x6E, 0, 0, 0, 0, 0, 0, 0, 0xB0, 0x4, 0x5C, 0x2, 0, 0, 0x1, 0, 0x53, 0, 0x74, 0, 0x72, 0, 0x69, 0, 0x6E, 0, 0x67, 0, 0x46, 0, 0x69, 0, 0x6C, 0, 0x65, 0, 0x49, 0, 0x6E, 0, 0x66, 0, 0x6F, 0, 0, 0, 0x38, 0x2, 0, 0, 0x1, 0, 0x30, 0, 0x30, 0, 0x30, 0, 0x30, 0, 0x30, 0, 0x34, 0, 0x62, 0, 0x30, 0, 0, 0, 0x1A, 0, 0x1, 0, 0x1, 0, 0x43, 0, 0x6F, 0, 0x6D, 0, 0x6D, 0, 0x65, 0, 0x6E, 0, 0x74, 0, 0x73, 0, 0, 0, 0, 0, 0, 0, 0x22, 0, 0x1, 0, 0x1, 0, 0x43, 0, 0x6F, 0, 0x6D, 0, 0x70, 0, 0x61, 0, 0x6E, 0, 0x79, 0, 0x4E, 0, 0x61, 0, 0x6D, 0, 0x65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x32, 0, 0x5, 0, 0x1, 0, 0x46, 0, 0x69, 0, 0x6C, 0, 0x65, 0, 0x44, 0, 0x65, 0, 0x73, 0, 0x63, 0, 0x72, 0, 0x69, 0, 0x70, 0, 0x74, 0, 0x69, 0, 0x6F, 0, 0x6E, 0, 0, 0, 0, 0, 0x44, 0, 0x65, 0, 0x70, 0, 0x61, 0, 0, 0, 0, 0, 0x30, 0, 0x8, 0, 0x1, 0, 0x46, 0, 0x69, 0, 0x6C, 0, 0x65, 0, 0x56, 0, 0x65, 0, 0x72, 0, 0x73, 0, 0x69, 0, 0x6F, 0, 0x6E, 0, 0, 0, 0, 0, 0x31, 0, 0x2E, 0, 0x30, 0, 0x2E, 0, 0x30, 0, 0x2E, 0, 0x30, 0, 0, 0, 0x32, 0, 0x9, 0, 0x1, 0, 0x49, 0, 0x6E, 0, 0x74, 0, 0x65, 0, 0x72, 0, 0x6E, 0, 0x61, 0, 0x6C, 0, 0x4E, 0, 0x61, 0, 0x6D, 0, 0x65, 0, 0, 0, 0x44, 0, 0x65, 0, 0x70, 0, 0x61, 0, 0x2E, 0, 0x65, 0, 0x78, 0, 0x65, 0, 0, 0, 0, 0, 0x48, 0, 0x12, 0, 0x1, 0, 0x4C, 0, 0x65, 0, 0x67, 0, 0x61, 0, 0x6C, 0, 0x43, 0, 0x6F, 0, 0x70, 0, 0x79, 0, 0x72, 0, 0x69, 0, 0x67, 0, 0x68, 0, 0x74, 0, 0, 0, 0x43, 0, 0x6F, 0, 0x70, 0, 0x79, 0, 0x72, 0, 0x69, 0, 0x67, 0, 0x68, 0, 0x74, 0, 0x20, 0, 0xA9, 0, 0x20, 0, 0x20, 0, 0x32, 0, 0x30, 0, 0x31, 0, 0x36, 0, 0, 0, 0x2A, 0, 0x1, 0, 0x1, 0, 0x4C, 0, 0x65, 0, 0x67, 0, 0x61, 0, 0x6C, 0, 0x54, 0, 0x72, 0, 0x61, 0, 0x64, 0, 0x65, 0, 0x6D, 0, 0x61, 0, 0x72, 0, 0x6B, 0, 0x73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x3A, 0, 0x9, 0, 0x1, 0, 0x4F, 0, 0x72, 0, 0x69, 0, 0x67, 0, 0x69, 0, 0x6E, 0, 0x61, 0, 0x6C, 0, 0x46, 0, 0x69, 0, 0x6C, 0, 0x65, 0, 0x6E, 0, 0x61, 0, 0x6D, 0, 0x65, 0, 0, 0, 0x44, 0, 0x65, 0, 0x70, 0, 0x61, 0, 0x2E, 0, 0x65, 0, 0x78, 0, 0x65, 0, 0, 0, 0, 0, 0x2A, 0, 0x5, 0, 0x1, 0, 0x50, 0, 0x72, 0, 0x6F, 0, 0x64, 0, 0x75, 0, 0x63, 0, 0x74, 0, 0x4E, 0, 0x61, 0, 0x6D, 0, 0x65, 0, 0, 0, 0, 0, 0x44, 0, 0x65, 0, 0x70, 0, 0x61, 0, 0, 0, 0, 0, 0x34, 0, 0x8, 0, 0x1, 0, 0x50, 0, 0x72, 0, 0x6F, 0, 0x64, 0, 0x75, 0, 0x63, 0, 0x74, 0, 0x56, 0, 0x65, 0, 0x72, 0, 0x73, 0, 0x69, 0, 0x6F, 0, 0x6E, 0, 0, 0, 0x31, 0, 0x2E, 0, 0x30, 0, 0x2E, 0, 0x30, 0, 0x2E, 0, 0x30, 0, 0, 0, 0x38, 0, 0x8, 0, 0x1, 0, 0x41, 0, 0x73, 0, 0x73, 0, 0x65, 0, 0x6D, 0, 0x62, 0, 0x6C, 0, 0x79, 0, 0x20, 0, 0x56, 0, 0x65, 0, 0x72, 0, 0x73, 0, 0x69, 0, 0x6F, 0, 0x6E, 0, 0, 0, 0x31, 0, 0x2E, 0, 0x30, 0, 0x2E, 0, 0x30, 0, 0x2E, 0, 0x30, 0, 0, 0, 0x9C, 0x43, 0, 0, 0xEA, 0x1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xEF, 0xBB, 0xBF, 0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x22, 0x31, 0x2E, 0x30, 0x22, 0x20, 0x65, 0x6E, 0x63, 0x6F, 0x64, 0x69, 0x6E, 0x67, 0x3D, 0x22, 0x55, 0x54, 0x46, 0x2D, 0x38, 0x22, 0x20, 0x73, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x6C, 0x6F, 0x6E, 0x65, 0x3D, 0x22, 0x79, 0x65, 0x73, 0x22, 0x3F, 0x3E, 0xD, 0xA, 0xD, 0xA, 0x3C, 0x61, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3D, 0x22, 0x75, 0x72, 0x6E, 0x3A, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x73, 0x2D, 0x6D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x2D, 0x63, 0x6F, 0x6D, 0x3A, 0x61, 0x73, 0x6D, 0x2E, 0x76, 0x31, 0x22, 0x20, 0x6D, 0x61, 0x6E, 0x69, 0x66, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x22, 0x31, 0x2E, 0x30, 0x22, 0x3E, 0xD, 0xA, 0x20, 0x20, 0x3C, 0x61, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x49, 0x64, 0x65, 0x6E, 0x74, 0x69, 0x74, 0x79, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x22, 0x31, 0x2E, 0x30, 0x2E, 0x30, 0x2E, 0x30, 0x22, 0x20, 0x6E, 0x61, 0x6D, 0x65, 0x3D, 0x22, 0x4D, 0x79, 0x41, 0x70, 0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x2E, 0x61, 0x70, 0x70, 0x22, 0x2F, 0x3E, 0xD, 0xA, 0x20, 0x20, 0x3C, 0x74, 0x72, 0x75, 0x73, 0x74, 0x49, 0x6E, 0x66, 0x6F, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3D, 0x22, 0x75, 0x72, 0x6E, 0x3A, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x73, 0x2D, 0x6D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x2D, 0x63, 0x6F, 0x6D, 0x3A, 0x61, 0x73, 0x6D, 0x2E, 0x76, 0x32, 0x22, 0x3E, 0xD, 0xA, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x3E, 0xD, 0xA, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6C, 0x65, 0x67, 0x65, 0x73, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3D, 0x22, 0x75, 0x72, 0x6E, 0x3A, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x73, 0x2D, 0x6D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x2D, 0x63, 0x6F, 0x6D, 0x3A, 0x61, 0x73, 0x6D, 0x2E, 0x76, 0x33, 0x22, 0x3E, 0xD, 0xA, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6F, 0x6E, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x20, 0x6C, 0x65, 0x76, 0x65, 0x6C, 0x3D, 0x22, 0x61, 0x73, 0x49, 0x6E, 0x76, 0x6F, 0x6B, 0x65, 0x72, 0x22, 0x20, 0x75, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x3D, 0x22, 0x66, 0x61, 0x6C, 0x73, 0x65, 0x22, 0x2F, 0x3E, 0xD, 0xA, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6C, 0x65, 0x67, 0x65, 0x73, 0x3E, 0xD, 0xA, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x2F, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x3E, 0xD, 0xA, 0x20, 0x20, 0x3C, 0x2F, 0x74, 0x72, 0x75, 0x73, 0x74, 0x49, 0x6E, 0x66, 0x6F, 0x3E, 0xD, 0xA, 0x3C, 0x2F, 0x61, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x3E, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x30, 0, 0, 0xC, 0, 0, 0, 0x90, 0x30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

        /// <summary>
        /// Combines two byte arrays into a single object, accounting for depa stub width.
        /// </summary>
        /// <param name="lFile">One half,</param>
        /// <param name="rFile">and the other half.</param>
        /// <returns>A concatenated byte array.</returns>
        private static byte[] StubCombine(byte[] lFile, byte[] rFile)
        {
            var buf = new byte[0x2328 + rFile.Length];

            lFile.CopyTo(buf, 0);
            rFile.CopyTo(buf, 0x2328);

            return buf;
        }

        /// <summary>
        /// Method uses System.IO.Compression DeflateStream object to compress a parameterized file's component bytes.
        /// </summary>
        /// <param name="file">A FileInfo object representing the file to be compressed.</param>
        /// <returns>A byte array of compressed data, representing the compressed file as bytes.</returns>
        private static byte[] CompressBytes(FileSystemInfo file)
        {
            var rawBytes = File.ReadAllBytes(file.FullName);
            using (var compressedBytesStream = new MemoryStream())
            {
                using (var compressionStream = new DeflateStream(compressedBytesStream, CompressionLevel.Optimal))
                    compressionStream.Write(rawBytes, 0, rawBytes.Length);

                return compressedBytesStream.ToArray();
            }
        }

        /// <summary>
        /// Entry point for packer program.
        /// </summary>
        /// <param name="args">User args. Check for p, m, b, and h.</param>
        public static void Main(string[] args)
        {
            try
            {
                if (args.Length.Equals(0))
                    throw new Exception(_helpDialogue);
                if (args.Length.Equals(1) && !args[0].Contains('h'))
                    throw new Exception(_helpDialogue);

                try
                {
                    if (!args[0].Contains("-"))
                        throw new Exception(_helpDialogue);

                    // Correct arguments array to inspect for desired executable path strings (re-indexing 'cuz)
                    var argsC = new string[args.Length - 1];
                    for (var i = 1; i < args.Length; i++) argsC[i - 1] = args[i];
                    
                    if (args[0].Contains('h')) // Help
                    {
                        throw new Exception(_helpDialogue);
                    }

                    if (!args[0].Contains('p')) // Pack Flag Missing
                        throw new Exception(_helpDialogue);
                    if (args[0].Contains('b')) // Backup
                    {
                        foreach (var file in argsC.Select(arg => new FileInfo(arg))
                            .Where(file => file.Extension.Equals(".exe")))
                        {
                            File.Copy(file.FullName, file.FullName + ".bak");
                        }
                    }
                    if (args[0].Contains('m')) // Mask
                    {
                        foreach (var file in argsC.Select(arg => new FileInfo(arg))
                            .Where(file => file.Extension.Equals(".exe")))
                        {
                            Pack(file, true);
                        }
                    }
                    else // Just Pack
                    {
                        foreach (var file in argsC.Select(arg => new FileInfo(arg))
                            .Where(file => file.Extension.Equals(".exe")))
                        {
                            Pack(file);
                        }
                    }
                }
                catch (Exception e)
                {
                    Console.WriteLine(e.Message);
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }

        /// <summary>
        /// Packs desired file using CompressBytes() method. Tacks decompressor on top of compressed code, resulting
        /// in a packed executable on-disk.
        /// </summary>
        /// <param name="file">File to pack.</param>
        /// <param name="mask">Boolean flag indicating whether or not to mask the compressed bytes.</param>
        private static void Pack(FileSystemInfo file, bool mask = false)
        {
            try
            {
                var compressedFileBytes = CompressBytes(file);
                var fName = file.FullName;
                var depackBuffer = new byte[_depaBytes.Length];

                for (var i = 0; i < _depaBytes.Length; i++)
                    depackBuffer[i] = Convert.ToByte(_depaBytes[i]);

                if (mask)
                {
                    var ran = new Random();
                    int rInt = ran.Next(1, 0xFF);

                    for (var i = 0; i < compressedFileBytes.Length; i++)
                    {
                        compressedFileBytes[i] = Convert.ToByte(compressedFileBytes[i] ^ rInt);
                    }

                    byte[] composite = StubCombine(depackBuffer, compressedFileBytes);
                    composite[0x2300] = Convert.ToByte(rInt); // Store XOR mask value at 0x2300.

                    File.WriteAllBytes(fName + ".exe", composite);
                    File.Delete(fName);
                    File.Move(fName + ".exe", fName);
                }
                else
                {
                    byte[] composite = StubCombine(depackBuffer, compressedFileBytes);

                    File.WriteAllBytes(fName + ".exe", composite);
                    File.Delete(fName);
                    File.Move(fName + ".exe", fName);
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }
    }
}
